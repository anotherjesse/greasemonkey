<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xul-overlay href="chrome://greasemonkey/content/pages-overlay.xul"?>

<window
    id="manage-window"
    title="Manage User Scripts"
    orient="vertical"
    style="padding:1em;"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

    <script type="application/x-javascript" src="chrome://greasemonkey/content/greasemonkey.js" />
    <script type="application/x-javascript">
    <![CDATA[

    (function() {
        var config = new Config();
        var listbox, header, description, chkEnabled, btnOk, btnCancel, btnUninstall, btnDisableAll, btnEnableAll;
        var selectedScript;
        var pagesControl;
        var uninstallList = [];

        window.addEventListener("load", function(ev) {
            config.load();
            loadControls();
            
            if (config.scripts.length == 0) {
                disableAll(true);
            }
            else {
                populateChooser();
                chooseScript(0);
            }
        }, false);

        function loadControls() {
            listbox = document.getElementById("lstScripts");
            header = document.getElementById("ctlHeader");
            description = document.getElementById("ctlDescription");
            btnOk = document.getElementById("btnOK");
            btnCancel = document.getElementById("btnCancel");
            btnUninstall = document.getElementById("btnUninstall");
            btnDisableAll = document.getElementById("btnDisableAll");
            btnEnableAll = document.getElementById("btnEnableAll");
            pagesControl = new PagesControl(document.getElementById("pages-control"));
            chkEnabled = document.getElementById("chkEnabled");

            listbox.addEventListener("select", function() { updateDetails(); }, false);
            btnOk.addEventListener("command", function() { handleOkButton(); }, false);
            btnCancel.addEventListener("command", function() { handleCancelButton(); }, false);
            btnUninstall.addEventListener("command", function() { handleUninstallButton(); }, false);
            btnDisableAll.addEventListener("command", function() { handleDisableAllButton(); }, false);
            btnEnableAll.addEventListener("command", function() { handleEnableAllButton(); }, false);
            chkEnabled.addEventListener("command", function() { 
                selectedScript.enabled = chkEnabled.checked;
		if (selectedScript.enabled) {
		    listbox.selectedItem.style.color = '';
		} else {
		    listbox.selectedItem.style.color = 'gray';
		}
		checkAllButtonStatus();
	    }, false);
        }

        function updateDetails() {
            if (listbox.selectedCount == 0) {
                selectedScript = null;
                header.setAttribute("title", "");
                description.textContent = " ";
                chkEnabled.checked = true;
                pagesControl.clear();
                disableAll(true);
                btnOk.disabled = false;
            }
            else {
                selectedScript = listbox.getSelectedItem(0).script;
                header.setAttribute("title", selectedScript.name);
                description.textContent = selectedScript.description;
                chkEnabled.checked = selectedScript.enabled;
                pagesControl.populate(selectedScript);
                disableAll(false);
            }
	    checkAllButtonStatus();
        }

        function handleOkButton() {
            for (var i = 0, script = null; (script = uninstallList[i]); i++) {
                var idx = config.find(script.namespace, script.name);
                config.scripts.splice(idx, 1);
            }
            config.save();

            for (var i = 0, script = null; (script = uninstallList[i]); i++) {
                getScriptFile(script.id).remove(false);
            }
            window.close();
        }

        function handleCancelButton() {
            window.close();            
        }

        function handleUninstallButton() {
            uninstallList.push(selectedScript);
            listbox.removeChild(listbox.childNodes[listbox.selectedIndex]);

            if (listbox.childNodes.length > 0) {
                chooseScript(Math.max(Math.min(listbox.selectedIndex, listbox.childNodes.length - 1), 0));
            }
        }

	function handleDisableAllButton() {
            for (var i = 0; i < listbox.childNodes.length; i++) {
		toggleScript(i, false);
	    }
	    btnDisableAll.disabled = true;
	    btnEnableAll.disabled = false;
	}

	function handleEnableAllButton() {
            for (var i = 0; i < listbox.childNodes.length; i++) {
		toggleScript(i, true);
	    }
	    btnEnableAll.disabled = true;
	    btnDisableAll.disabled = false;
	}

        function populateChooser() {
            for (var i = 0, script = null; (script = config.scripts[i]); i++) {
                var listitem = document.createElement("listitem");

                listitem.setAttribute("label", script.name);
                listitem.script = script;
		if (!script.enabled) {
		    listitem.style.color = 'gray';
		}
                listbox.appendChild(listitem);
            }
	    checkAllButtonStatus();
        }

        function chooseScript(index) {
            listbox.selectedIndex = index;            
            listbox.focus();
        }

        function disableAll(disable) {
            var elms = document.getElementsByTagName("*");

            for (var i = 0, elm = null; (elm = elms[i]); i++) {
                if (elm.id != "btnCancel") {
                    elm.disabled = disable;
                }
            }
        }

	function toggleScript(index, enableFlag) {
	    var listitem = listbox.childNodes[index];
	    if (enableFlag) {
		listitem.script.enabled = true;
		listitem.style.color = '';
	    } else {
		listitem.script.enabled = false;
		listitem.style.color = 'gray';
	    }
	}

	function checkAllButtonStatus() {
	    var enabledCount = 0;
	    var scriptCount = config.scripts.length;
	    for (var i = 0; i < scriptCount; i++) {
		if (config.scripts[i].enabled)
		    enabledCount++;
	    }
	    if (enabledCount == 0) { // all scripts are disabled
		btnDisableAll.disabled = true;
	    } else if (enabledCount == scriptCount) { // all scripts are enabled
		btnEnableAll.disabled = true;
	    } else {
		btnDisableAll.disabled = false;
		btnEnableAll.disabled = false;
	    }
	}

    })();

    ]]>
    </script>

    <hbox>
        <listbox id="lstScripts" style="width:auto; min-width:140px; margin-top:0" />
        <vbox flex="1">
            <dialogheader id="ctlHeader" title="" />
            <description id="ctlDescription" style="margin-top:.5em; margin-bottom:.5em; height:3em; max-height:3em;"> </description>
            <vbox id="pages-control" />
            <groupbox>
                <caption label="Enabled" />
                <hbox>
                    <description flex="1">Temporarily enable or disable a user script without uninstalling it.</description>
                    <checkbox id="chkEnabled" label="Enabled" checked="true" />
                </hbox>
            </groupbox>
	    <hbox>
		<button flex="1" id="btnUninstall" label="Uninstall" style="margin-top:1em" />
		<button flex="1" id="btnDisableAll" label="Disable All" style="margin-top:1em" />
		<button flex="1" id="btnEnableAll" label="Enable All" style="margin-top:1em" />
	    </hbox>
        </vbox>
    </hbox>
    <spacer flex="1" style="min-height:2em" />
    <hbox>
        <spacer flex="1" />
        <button id="btnOK" label="OK" default="true" />
        <button id="btnCancel" label="Cancel" />
    </hbox>

</window>

