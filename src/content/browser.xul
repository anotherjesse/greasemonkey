<?xml version="1.0"?>

<overlay id="greasemonkey-overlay" xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

    <script type="application/x-javascript" src="chrome://greasemonkey/content/greasemonkey.js" />
    <script type="application/x-javascript">
    <![CDATA[
        window.addEventListener("load", function() {
          var appcontent = ge("appcontent");

          if (appcontent){
            if (!appcontent.greased){
              appcontent.greased = true;
              appcontent.addEventListener("DOMContentLoaded", greaseLoad, false);

              ge("userscript-tools-manage").addEventListener("command", manageMenuItemClicked, false);
              ge("contentAreaContextMenu").addEventListener("popupshowing", contextMenuShowing, false);
              ge("menu_ToolsPopup").addEventListener("popupshowing", toolsMenuShowing, false);
              ge("install-userscript").addEventListener("command", installContextItemClicked, false);
              ge("userscript-tools-install").addEventListener("command", installMenuItemClicked, false);
            }
          }
          
          function greaseLoad(e) {
            var config = new Config();
            var scriptElm = e.originalTarget.createElement("SCRIPT");

            config.load();
            
            outer:
            for (var i = 0; i < config.scripts.length; i++) {
              var script = config.scripts[i];

              if (script.enabled) {
                for (var j = 0; j < script.includes.length; j++) {
                	var pattern = convert2RegExp(script.includes[j]);

                	if (pattern.test(e.originalTarget.location.href)) {
              	    for (var k = 0; k < script.excludes.length; k++) {
                  		pattern = convert2RegExp(script.excludes[k]);
          		
                  		if (pattern.test(e.originalTarget.location.href)) {
                		    continue outer;
                  		}
              	    }

                    scriptElm.appendChild(
                      e.originalTarget.createTextNode(
                        "//===" + script.id + "===\n" + 
                        getContents(getScriptChrome(script.id)) + 
                        "\n\n"
                      )
                    );
          	    
              	    continue outer;
                	}
                }
              }
            }

            if (scriptElm.childNodes.length > 0) {
              e.originalTarget.body.appendChild(scriptElm);
              e.originalTarget.body.removeChild(scriptElm);
            }
            
          }

          function manageMenuItemClicked() {
            window.openDialog("chrome://greasemonkey/content/manage.xul", "manager", 
              "resizable,centerscreen,modal");
          }

          function contextMenuShowing() {
            var culprit = document.popupNode;
            var contextItem = ge("install-userscript");
            var contextSep = ge("install-userscript-sep");

            contextItem.hidden = contextSep.hidden = 
              !(culprit.tagName.toLowerCase() == "a" 
              && culprit.href.match(/\.user\.js(\?|$)/i) != null);
          }

          function toolsMenuShowing() {
            var culprit = document.popupNode;
            var installItem = ge("userscript-tools-install");

            var disabled = !(window._content && window._content.location && 
            		 window._content.location.href.match(/\.user\.js(\?|$)/i) != null);

            installItem.setAttribute("disabled", disabled.toString());
          }

          function installMenuItemClicked() {
            new ScriptDownloader(window._content.location.href).start();
          }

          function installContextItemClicked() {
            new ScriptDownloader(document.popupNode.href).start();
          }

          function parseArgs(href) {
            var qsStartPos = href.lastIndexOf("?");
            var vargs = {};

            if (qsStartPos > -1) {
              var qs = href.substring(qsStartPos + 1);
              var args = qs.split("&");
              var nv;

              for (var i = 0, arg = null; (arg = args[i]); i++) {
                nv = arg.split("=");
                vargs[nv[0]] = unescape(nv[1]);
              }
            }

            return vargs;
          }

          function ge(id) {
            return window.document.getElementById(id)
          }

        }, false); // end window.addEventListener("load"...)

    ]]>
    </script>

    <popup id="contentAreaContextMenu">
        <menuitem id="install-userscript" label="Install User Script..."  accesskey="S" insertbefore="context-openlink" />
        <menuseparator id="install-userscript-sep" insertbefore="context-openlink" />
    </popup>

    <menupopup id="menu_ToolsPopup">
        <menuseparator id="userscript-tools-sep" position="9" />
        <menuitem id="userscript-tools-install" position="10" accesskey="S" label="Install User Script..." />
        <menuitem id="userscript-tools-manage" position="11" accesskey="U" label="Manage User Scripts..." />
    </menupopup>

</overlay>
